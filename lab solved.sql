    #List the number of films per category.
    SELECT category_id, COUNT(*) AS film_count
	FROM film_category
	GROUP BY category_id;

    #Retrieve the store ID, city, and country for each store.
	SELECT store.store_id, city.city_id, country.country_id
	FROM store
	LEFT JOIN address ON store.address_id = address.address_id
	LEFT JOIN city ON address.city_id = city.city_id
	LEFT JOIN country ON city.country_id = country.country_id;

    #Calculate the total revenue generated by each store in dollars.
    SELECT DISTINCT store.store_id, SUM(payment.amount) AS total_payment
    FROM store
    JOIN staff on store.store_id = staff.store_id
	JOIN payment on payment.staff_id = staff.staff_id
    GROUP BY store.store_id

    #Determine the average running time of films for each category.
    SELECT film.film_id, avg(film.length) as avg, film_category.category_id, category.name
    FROM film
    JOIN film_category on film.film_id = film_category.category_id
    JOIN category on film_category.category_id = category.category_id
    GROUP BY film.film_id
    
    #Identify the film categories with the longest average running time.
    SELECT category.name, AVG(film.length) AS avg_running_time
	FROM film
	JOIN film_category ON film.film_id = film_category.film_id
	JOIN category ON film_category.category_id = category.category_id
	GROUP BY category.name
	ORDER BY avg_running_time DESC;

    #Display the top 10 most frequently rented movies in descending order.
   SELECT film.film_id, film.title, COUNT(rental.rental_id) AS rental_count
	FROM film
	JOIN inventory ON film.film_id = inventory.film_id
	JOIN rental ON inventory.inventory_id = rental.inventory_id
	GROUP BY film.film_id, film.title
	ORDER BY rental_count DESC
	LIMIT 10;

    
    #Determine if "Academy Dinosaur" can be rented from Store 1.
	SELECT film.title, store.store_id
	FROM film
	JOIN inventory ON film.film_id = inventory.film_id
	JOIN store ON store.store_id = inventory.store_id
	WHERE film.title = 'Academy Dinosaur' AND store.store_id = 1;

